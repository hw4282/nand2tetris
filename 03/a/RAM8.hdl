// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=Sout1, b=Sout2, c=Sout3, d=Sout4, e=Sout5, f=Sout6, g=Sout7, h=Sout8);
    Register(in=in, load=Sout1, out=Rout1);
    Register(in=in, load=Sout2, out=Rout2);
    Register(in=in, load=Sout3, out=Rout3);
    Register(in=in, load=Sout4, out=Rout4);
    Register(in=in, load=Sout5, out=Rout5);
    Register(in=in, load=Sout6, out=Rout6);
    Register(in=in, load=Sout7, out=Rout7);
    Register(in=in, load=Sout8, out=Rout8);
    Mux8Way16(a=Rout1, b=Rout2, c=Rout3, d=Rout4, e=Rout5, f=Rout6, g=Rout7, h=Rout8, sel=address, out=out);
}